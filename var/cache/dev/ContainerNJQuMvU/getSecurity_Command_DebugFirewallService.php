<?php

namespace ContainerNJQuMvU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Command_DebugFirewallService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.command.debug_firewall' shared service.
     *
     * @return \Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'security-bundle'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'DebugFirewallCommand.php';

        $container->privates['security.command.debug_firewall'] = $instance = new \Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand($container->parameters['security.firewalls'], ($container->privates['.service_locator.Z2.vnux'] ?? $container->get_ServiceLocator_Z2_VnuxService()), ($container->privates['.service_locator.BtWePu2'] ?? $container->load('get_ServiceLocator_BtWePu2Service')), ['register' => [], 'login' => [0 => ($container->privates['security.authenticator.json_login.login'] ?? $container->load('getSecurity_Authenticator_JsonLogin_LoginService'))], 'api_token_refresh' => [0 => ($container->privates['security.authenticator.refresh_jwt.api_token_refresh'] ?? $container->load('getSecurity_Authenticator_RefreshJwt_ApiTokenRefreshService'))], 'api' => [0 => ($container->privates['security.authenticator.guard.api.0'] ?? $container->load('getSecurity_Authenticator_Guard_Api_0Service'))], 'main' => [0 => ($container->privates['App\\Security\\AppAuthenticator'] ?? $container->load('getAppAuthenticatorService'))]], true);

        $instance->setName('debug:firewall');
        $instance->setDescription('Display information about your security firewall(s)');

        return $instance;
    }
}
